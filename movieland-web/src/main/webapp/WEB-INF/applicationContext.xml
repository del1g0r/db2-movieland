<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="com.study.movieland">
        <context:exclude-filter type="regex" expression="com\.study\.movieland\.web\..*"/>
    </context:component-scan>
    <context:property-placeholder properties-ref="yamlProperties"/>

    <bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath:application.yml"/>
    </bean>

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url"
                  value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="maxTotal" value="${dbcp.maxTotal}"/>
        <property name="testOnBorrow" value="${dbcp.testOnBorrow}"/>
        <property name="validationQuery" value="${dbcp.validationQuery}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>

    <task:annotation-driven executor="defaultExecutor" scheduler="defaultScheduler"/>
    <task:executor id="defaultExecutor" pool-size="${executor.pool-size}"/>
    <task:scheduler id="defaultScheduler" pool-size="${scheduler.pool-size}"/>

</beans>